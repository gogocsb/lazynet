// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DS_STORE_PROTOCOL.proto

#ifndef PROTOBUF_DS_5fSTORE_5fPROTOCOL_2eproto__INCLUDED
#define PROTOBUF_DS_5fSTORE_5fPROTOCOL_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace DS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

class MSG_DS_STORE_MAIN_REGISTER;
class MSG_DS_STORE_MAIN_REGISTER_ACK;
class MSG_DS_MAIN_STORE_PREPARE_STORE;
class RECVINFO;
class MSG_DS_MAIN_STORE_PREPARE_STORE_ACK;
class CLIENTINFO;
class MSG_DS_MAIN_STORE_START_STORE;
class MSG_DS_STORE_MAIN_FINISH_BLK;
class MSG_DS_STORE_MAIN_FINISH_BLK_ACK;
class MSG_DS_MAIN_STORE_FINISH_STORE;
class MSG_DS_MAIN_STORE_RETRY_STORE;
class MSG_DS_MAIN_STORE_RETRY_STORE_ACK;

// ===================================================================

class MSG_DS_STORE_MAIN_REGISTER : public ::google::protobuf::Message {
 public:
  MSG_DS_STORE_MAIN_REGISTER();
  virtual ~MSG_DS_STORE_MAIN_REGISTER();

  MSG_DS_STORE_MAIN_REGISTER(const MSG_DS_STORE_MAIN_REGISTER& from);

  inline MSG_DS_STORE_MAIN_REGISTER& operator=(const MSG_DS_STORE_MAIN_REGISTER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_STORE_MAIN_REGISTER& default_instance();

  void Swap(MSG_DS_STORE_MAIN_REGISTER* other);

  // implements Message ----------------------------------------------

  MSG_DS_STORE_MAIN_REGISTER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_STORE_MAIN_REGISTER& from);
  void MergeFrom(const MSG_DS_STORE_MAIN_REGISTER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 thread_id = 1;
  inline bool has_thread_id() const;
  inline void clear_thread_id();
  static const int kThreadIdFieldNumber = 1;
  inline ::google::protobuf::uint32 thread_id() const;
  inline void set_thread_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_STORE_MAIN_REGISTER)
 private:
  inline void set_has_thread_id();
  inline void clear_has_thread_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 thread_id_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_STORE_MAIN_REGISTER* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_STORE_MAIN_REGISTER_ACK : public ::google::protobuf::Message {
 public:
  MSG_DS_STORE_MAIN_REGISTER_ACK();
  virtual ~MSG_DS_STORE_MAIN_REGISTER_ACK();

  MSG_DS_STORE_MAIN_REGISTER_ACK(const MSG_DS_STORE_MAIN_REGISTER_ACK& from);

  inline MSG_DS_STORE_MAIN_REGISTER_ACK& operator=(const MSG_DS_STORE_MAIN_REGISTER_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_STORE_MAIN_REGISTER_ACK& default_instance();

  void Swap(MSG_DS_STORE_MAIN_REGISTER_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DS_STORE_MAIN_REGISTER_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_STORE_MAIN_REGISTER_ACK& from);
  void MergeFrom(const MSG_DS_STORE_MAIN_REGISTER_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 thread_id = 1;
  inline bool has_thread_id() const;
  inline void clear_thread_id();
  static const int kThreadIdFieldNumber = 1;
  inline ::google::protobuf::uint32 thread_id() const;
  inline void set_thread_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_STORE_MAIN_REGISTER_ACK)
 private:
  inline void set_has_thread_id();
  inline void clear_has_thread_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 thread_id_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_STORE_MAIN_REGISTER_ACK* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_MAIN_STORE_PREPARE_STORE : public ::google::protobuf::Message {
 public:
  MSG_DS_MAIN_STORE_PREPARE_STORE();
  virtual ~MSG_DS_MAIN_STORE_PREPARE_STORE();

  MSG_DS_MAIN_STORE_PREPARE_STORE(const MSG_DS_MAIN_STORE_PREPARE_STORE& from);

  inline MSG_DS_MAIN_STORE_PREPARE_STORE& operator=(const MSG_DS_MAIN_STORE_PREPARE_STORE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_MAIN_STORE_PREPARE_STORE& default_instance();

  void Swap(MSG_DS_MAIN_STORE_PREPARE_STORE* other);

  // implements Message ----------------------------------------------

  MSG_DS_MAIN_STORE_PREPARE_STORE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_MAIN_STORE_PREPARE_STORE& from);
  void MergeFrom(const MSG_DS_MAIN_STORE_PREPARE_STORE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);

  // required int32 type_id = 3;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 3;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_MAIN_STORE_PREPARE_STORE)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_type_id();
  inline void clear_has_type_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 type_id_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_MAIN_STORE_PREPARE_STORE* default_instance_;
};
// -------------------------------------------------------------------

class RECVINFO : public ::google::protobuf::Message {
 public:
  RECVINFO();
  virtual ~RECVINFO();

  RECVINFO(const RECVINFO& from);

  inline RECVINFO& operator=(const RECVINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RECVINFO& default_instance();

  void Swap(RECVINFO* other);

  // implements Message ----------------------------------------------

  RECVINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RECVINFO& from);
  void MergeFrom(const RECVINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string recv_ip = 1;
  inline bool has_recv_ip() const;
  inline void clear_recv_ip();
  static const int kRecvIpFieldNumber = 1;
  inline const ::std::string& recv_ip() const;
  inline void set_recv_ip(const ::std::string& value);
  inline void set_recv_ip(const char* value);
  inline void set_recv_ip(const char* value, size_t size);
  inline ::std::string* mutable_recv_ip();
  inline ::std::string* release_recv_ip();
  inline void set_allocated_recv_ip(::std::string* recv_ip);

  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.RECVINFO)
 private:
  inline void set_has_recv_ip();
  inline void clear_has_recv_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* recv_ip_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static RECVINFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_MAIN_STORE_PREPARE_STORE_ACK : public ::google::protobuf::Message {
 public:
  MSG_DS_MAIN_STORE_PREPARE_STORE_ACK();
  virtual ~MSG_DS_MAIN_STORE_PREPARE_STORE_ACK();

  MSG_DS_MAIN_STORE_PREPARE_STORE_ACK(const MSG_DS_MAIN_STORE_PREPARE_STORE_ACK& from);

  inline MSG_DS_MAIN_STORE_PREPARE_STORE_ACK& operator=(const MSG_DS_MAIN_STORE_PREPARE_STORE_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_MAIN_STORE_PREPARE_STORE_ACK& default_instance();

  void Swap(MSG_DS_MAIN_STORE_PREPARE_STORE_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DS_MAIN_STORE_PREPARE_STORE_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_MAIN_STORE_PREPARE_STORE_ACK& from);
  void MergeFrom(const MSG_DS_MAIN_STORE_PREPARE_STORE_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .DS.RECVINFO recv_info = 3;
  inline bool has_recv_info() const;
  inline void clear_recv_info();
  static const int kRecvInfoFieldNumber = 3;
  inline const ::DS::RECVINFO& recv_info() const;
  inline ::DS::RECVINFO* mutable_recv_info();
  inline ::DS::RECVINFO* release_recv_info();
  inline void set_allocated_recv_info(::DS::RECVINFO* recv_info);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_recv_info();
  inline void clear_has_recv_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 result_;
  ::DS::RECVINFO* recv_info_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_MAIN_STORE_PREPARE_STORE_ACK* default_instance_;
};
// -------------------------------------------------------------------

class CLIENTINFO : public ::google::protobuf::Message {
 public:
  CLIENTINFO();
  virtual ~CLIENTINFO();

  CLIENTINFO(const CLIENTINFO& from);

  inline CLIENTINFO& operator=(const CLIENTINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLIENTINFO& default_instance();

  void Swap(CLIENTINFO* other);

  // implements Message ----------------------------------------------

  CLIENTINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLIENTINFO& from);
  void MergeFrom(const CLIENTINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string client_ip = 1;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 1;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.CLIENTINFO)
 private:
  inline void set_has_client_ip();
  inline void clear_has_client_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* client_ip_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static CLIENTINFO* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_MAIN_STORE_START_STORE : public ::google::protobuf::Message {
 public:
  MSG_DS_MAIN_STORE_START_STORE();
  virtual ~MSG_DS_MAIN_STORE_START_STORE();

  MSG_DS_MAIN_STORE_START_STORE(const MSG_DS_MAIN_STORE_START_STORE& from);

  inline MSG_DS_MAIN_STORE_START_STORE& operator=(const MSG_DS_MAIN_STORE_START_STORE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_MAIN_STORE_START_STORE& default_instance();

  void Swap(MSG_DS_MAIN_STORE_START_STORE* other);

  // implements Message ----------------------------------------------

  MSG_DS_MAIN_STORE_START_STORE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_MAIN_STORE_START_STORE& from);
  void MergeFrom(const MSG_DS_MAIN_STORE_START_STORE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);

  // optional .DS.CLIENTINFO client_info = 3;
  inline bool has_client_info() const;
  inline void clear_client_info();
  static const int kClientInfoFieldNumber = 3;
  inline const ::DS::CLIENTINFO& client_info() const;
  inline ::DS::CLIENTINFO* mutable_client_info();
  inline ::DS::CLIENTINFO* release_client_info();
  inline void set_allocated_client_info(::DS::CLIENTINFO* client_info);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_MAIN_STORE_START_STORE)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_client_info();
  inline void clear_has_client_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 session_id_;
  ::DS::CLIENTINFO* client_info_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_MAIN_STORE_START_STORE* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_STORE_MAIN_FINISH_BLK : public ::google::protobuf::Message {
 public:
  MSG_DS_STORE_MAIN_FINISH_BLK();
  virtual ~MSG_DS_STORE_MAIN_FINISH_BLK();

  MSG_DS_STORE_MAIN_FINISH_BLK(const MSG_DS_STORE_MAIN_FINISH_BLK& from);

  inline MSG_DS_STORE_MAIN_FINISH_BLK& operator=(const MSG_DS_STORE_MAIN_FINISH_BLK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_STORE_MAIN_FINISH_BLK& default_instance();

  void Swap(MSG_DS_STORE_MAIN_FINISH_BLK* other);

  // implements Message ----------------------------------------------

  MSG_DS_STORE_MAIN_FINISH_BLK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_STORE_MAIN_FINISH_BLK& from);
  void MergeFrom(const MSG_DS_STORE_MAIN_FINISH_BLK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int64 blkid = 2;
  inline bool has_blkid() const;
  inline void clear_blkid();
  static const int kBlkidFieldNumber = 2;
  inline ::google::protobuf::int64 blkid() const;
  inline void set_blkid(::google::protobuf::int64 value);

  // required string start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  inline ::std::string* release_start_time();
  inline void set_allocated_start_time(::std::string* start_time);

  // required string end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  inline ::std::string* release_end_time();
  inline void set_allocated_end_time(::std::string* end_time);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_STORE_MAIN_FINISH_BLK)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_blkid();
  inline void clear_has_blkid();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 blkid_;
  ::std::string* start_time_;
  ::std::string* end_time_;
  ::google::protobuf::int32 task_id_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_STORE_MAIN_FINISH_BLK* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_STORE_MAIN_FINISH_BLK_ACK : public ::google::protobuf::Message {
 public:
  MSG_DS_STORE_MAIN_FINISH_BLK_ACK();
  virtual ~MSG_DS_STORE_MAIN_FINISH_BLK_ACK();

  MSG_DS_STORE_MAIN_FINISH_BLK_ACK(const MSG_DS_STORE_MAIN_FINISH_BLK_ACK& from);

  inline MSG_DS_STORE_MAIN_FINISH_BLK_ACK& operator=(const MSG_DS_STORE_MAIN_FINISH_BLK_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_STORE_MAIN_FINISH_BLK_ACK& default_instance();

  void Swap(MSG_DS_STORE_MAIN_FINISH_BLK_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DS_STORE_MAIN_FINISH_BLK_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_STORE_MAIN_FINISH_BLK_ACK& from);
  void MergeFrom(const MSG_DS_STORE_MAIN_FINISH_BLK_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);

  // required int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_STORE_MAIN_FINISH_BLK_ACK* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_MAIN_STORE_FINISH_STORE : public ::google::protobuf::Message {
 public:
  MSG_DS_MAIN_STORE_FINISH_STORE();
  virtual ~MSG_DS_MAIN_STORE_FINISH_STORE();

  MSG_DS_MAIN_STORE_FINISH_STORE(const MSG_DS_MAIN_STORE_FINISH_STORE& from);

  inline MSG_DS_MAIN_STORE_FINISH_STORE& operator=(const MSG_DS_MAIN_STORE_FINISH_STORE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_MAIN_STORE_FINISH_STORE& default_instance();

  void Swap(MSG_DS_MAIN_STORE_FINISH_STORE* other);

  // implements Message ----------------------------------------------

  MSG_DS_MAIN_STORE_FINISH_STORE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_MAIN_STORE_FINISH_STORE& from);
  void MergeFrom(const MSG_DS_MAIN_STORE_FINISH_STORE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_MAIN_STORE_FINISH_STORE)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 session_id_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_MAIN_STORE_FINISH_STORE* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_MAIN_STORE_RETRY_STORE : public ::google::protobuf::Message {
 public:
  MSG_DS_MAIN_STORE_RETRY_STORE();
  virtual ~MSG_DS_MAIN_STORE_RETRY_STORE();

  MSG_DS_MAIN_STORE_RETRY_STORE(const MSG_DS_MAIN_STORE_RETRY_STORE& from);

  inline MSG_DS_MAIN_STORE_RETRY_STORE& operator=(const MSG_DS_MAIN_STORE_RETRY_STORE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_MAIN_STORE_RETRY_STORE& default_instance();

  void Swap(MSG_DS_MAIN_STORE_RETRY_STORE* other);

  // implements Message ----------------------------------------------

  MSG_DS_MAIN_STORE_RETRY_STORE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_MAIN_STORE_RETRY_STORE& from);
  void MergeFrom(const MSG_DS_MAIN_STORE_RETRY_STORE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_MAIN_STORE_RETRY_STORE)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 session_id_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_MAIN_STORE_RETRY_STORE* default_instance_;
};
// -------------------------------------------------------------------

class MSG_DS_MAIN_STORE_RETRY_STORE_ACK : public ::google::protobuf::Message {
 public:
  MSG_DS_MAIN_STORE_RETRY_STORE_ACK();
  virtual ~MSG_DS_MAIN_STORE_RETRY_STORE_ACK();

  MSG_DS_MAIN_STORE_RETRY_STORE_ACK(const MSG_DS_MAIN_STORE_RETRY_STORE_ACK& from);

  inline MSG_DS_MAIN_STORE_RETRY_STORE_ACK& operator=(const MSG_DS_MAIN_STORE_RETRY_STORE_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_DS_MAIN_STORE_RETRY_STORE_ACK& default_instance();

  void Swap(MSG_DS_MAIN_STORE_RETRY_STORE_ACK* other);

  // implements Message ----------------------------------------------

  MSG_DS_MAIN_STORE_RETRY_STORE_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_DS_MAIN_STORE_RETRY_STORE_ACK& from);
  void MergeFrom(const MSG_DS_MAIN_STORE_RETRY_STORE_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS.MSG_DS_MAIN_STORE_RETRY_STORE_ACK)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_AssignDesc_DS_5fSTORE_5fPROTOCOL_2eproto();
  friend void protobuf_ShutdownFile_DS_5fSTORE_5fPROTOCOL_2eproto();

  void InitAsDefaultInstance();
  static MSG_DS_MAIN_STORE_RETRY_STORE_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_DS_STORE_MAIN_REGISTER

// optional uint32 thread_id = 1;
inline bool MSG_DS_STORE_MAIN_REGISTER::has_thread_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_STORE_MAIN_REGISTER::set_has_thread_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_STORE_MAIN_REGISTER::clear_has_thread_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_STORE_MAIN_REGISTER::clear_thread_id() {
  thread_id_ = 0u;
  clear_has_thread_id();
}
inline ::google::protobuf::uint32 MSG_DS_STORE_MAIN_REGISTER::thread_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_REGISTER.thread_id)
  return thread_id_;
}
inline void MSG_DS_STORE_MAIN_REGISTER::set_thread_id(::google::protobuf::uint32 value) {
  set_has_thread_id();
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_REGISTER.thread_id)
}

// -------------------------------------------------------------------

// MSG_DS_STORE_MAIN_REGISTER_ACK

// optional uint32 thread_id = 1;
inline bool MSG_DS_STORE_MAIN_REGISTER_ACK::has_thread_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_STORE_MAIN_REGISTER_ACK::set_has_thread_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_STORE_MAIN_REGISTER_ACK::clear_has_thread_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_STORE_MAIN_REGISTER_ACK::clear_thread_id() {
  thread_id_ = 0u;
  clear_has_thread_id();
}
inline ::google::protobuf::uint32 MSG_DS_STORE_MAIN_REGISTER_ACK::thread_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_REGISTER_ACK.thread_id)
  return thread_id_;
}
inline void MSG_DS_STORE_MAIN_REGISTER_ACK::set_thread_id(::google::protobuf::uint32 value) {
  set_has_thread_id();
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_REGISTER_ACK.thread_id)
}

// -------------------------------------------------------------------

// MSG_DS_MAIN_STORE_PREPARE_STORE

// required int32 task_id = 1;
inline bool MSG_DS_MAIN_STORE_PREPARE_STORE::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_PREPARE_STORE::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_PREPARE_STORE.task_id)
  return task_id_;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_PREPARE_STORE.task_id)
}

// required int32 session_id = 2;
inline bool MSG_DS_MAIN_STORE_PREPARE_STORE::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_PREPARE_STORE::session_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_PREPARE_STORE.session_id)
  return session_id_;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_PREPARE_STORE.session_id)
}

// required int32 type_id = 3;
inline bool MSG_DS_MAIN_STORE_PREPARE_STORE::has_type_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::set_has_type_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_PREPARE_STORE::type_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_PREPARE_STORE.type_id)
  return type_id_;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_PREPARE_STORE.type_id)
}

// -------------------------------------------------------------------

// RECVINFO

// required string recv_ip = 1;
inline bool RECVINFO::has_recv_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RECVINFO::set_has_recv_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RECVINFO::clear_has_recv_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RECVINFO::clear_recv_ip() {
  if (recv_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recv_ip_->clear();
  }
  clear_has_recv_ip();
}
inline const ::std::string& RECVINFO::recv_ip() const {
  // @@protoc_insertion_point(field_get:DS.RECVINFO.recv_ip)
  return *recv_ip_;
}
inline void RECVINFO::set_recv_ip(const ::std::string& value) {
  set_has_recv_ip();
  if (recv_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recv_ip_ = new ::std::string;
  }
  recv_ip_->assign(value);
  // @@protoc_insertion_point(field_set:DS.RECVINFO.recv_ip)
}
inline void RECVINFO::set_recv_ip(const char* value) {
  set_has_recv_ip();
  if (recv_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recv_ip_ = new ::std::string;
  }
  recv_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:DS.RECVINFO.recv_ip)
}
inline void RECVINFO::set_recv_ip(const char* value, size_t size) {
  set_has_recv_ip();
  if (recv_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recv_ip_ = new ::std::string;
  }
  recv_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DS.RECVINFO.recv_ip)
}
inline ::std::string* RECVINFO::mutable_recv_ip() {
  set_has_recv_ip();
  if (recv_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recv_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DS.RECVINFO.recv_ip)
  return recv_ip_;
}
inline ::std::string* RECVINFO::release_recv_ip() {
  clear_has_recv_ip();
  if (recv_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recv_ip_;
    recv_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RECVINFO::set_allocated_recv_ip(::std::string* recv_ip) {
  if (recv_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recv_ip_;
  }
  if (recv_ip) {
    set_has_recv_ip();
    recv_ip_ = recv_ip;
  } else {
    clear_has_recv_ip();
    recv_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DS.RECVINFO.recv_ip)
}

// required int32 port = 2;
inline bool RECVINFO::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RECVINFO::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RECVINFO::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RECVINFO::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 RECVINFO::port() const {
  // @@protoc_insertion_point(field_get:DS.RECVINFO.port)
  return port_;
}
inline void RECVINFO::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:DS.RECVINFO.port)
}

// -------------------------------------------------------------------

// MSG_DS_MAIN_STORE_PREPARE_STORE_ACK

// required int32 task_id = 1;
inline bool MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.task_id)
  return task_id_;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.task_id)
}

// required int32 result = 2;
inline bool MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::result() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.result)
  return result_;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.result)
}

// required .DS.RECVINFO recv_info = 3;
inline bool MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::has_recv_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::set_has_recv_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::clear_has_recv_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::clear_recv_info() {
  if (recv_info_ != NULL) recv_info_->::DS::RECVINFO::Clear();
  clear_has_recv_info();
}
inline const ::DS::RECVINFO& MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::recv_info() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.recv_info)
  return recv_info_ != NULL ? *recv_info_ : *default_instance_->recv_info_;
}
inline ::DS::RECVINFO* MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::mutable_recv_info() {
  set_has_recv_info();
  if (recv_info_ == NULL) recv_info_ = new ::DS::RECVINFO;
  // @@protoc_insertion_point(field_mutable:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.recv_info)
  return recv_info_;
}
inline ::DS::RECVINFO* MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::release_recv_info() {
  clear_has_recv_info();
  ::DS::RECVINFO* temp = recv_info_;
  recv_info_ = NULL;
  return temp;
}
inline void MSG_DS_MAIN_STORE_PREPARE_STORE_ACK::set_allocated_recv_info(::DS::RECVINFO* recv_info) {
  delete recv_info_;
  recv_info_ = recv_info;
  if (recv_info) {
    set_has_recv_info();
  } else {
    clear_has_recv_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DS.MSG_DS_MAIN_STORE_PREPARE_STORE_ACK.recv_info)
}

// -------------------------------------------------------------------

// CLIENTINFO

// required string client_ip = 1;
inline bool CLIENTINFO::has_client_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLIENTINFO::set_has_client_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLIENTINFO::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLIENTINFO::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& CLIENTINFO::client_ip() const {
  // @@protoc_insertion_point(field_get:DS.CLIENTINFO.client_ip)
  return *client_ip_;
}
inline void CLIENTINFO::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
  // @@protoc_insertion_point(field_set:DS.CLIENTINFO.client_ip)
}
inline void CLIENTINFO::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:DS.CLIENTINFO.client_ip)
}
inline void CLIENTINFO::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DS.CLIENTINFO.client_ip)
}
inline ::std::string* CLIENTINFO::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DS.CLIENTINFO.client_ip)
  return client_ip_;
}
inline ::std::string* CLIENTINFO::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CLIENTINFO::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DS.CLIENTINFO.client_ip)
}

// required int32 port = 2;
inline bool CLIENTINFO::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLIENTINFO::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLIENTINFO::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLIENTINFO::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 CLIENTINFO::port() const {
  // @@protoc_insertion_point(field_get:DS.CLIENTINFO.port)
  return port_;
}
inline void CLIENTINFO::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:DS.CLIENTINFO.port)
}

// -------------------------------------------------------------------

// MSG_DS_MAIN_STORE_START_STORE

// required int32 task_id = 1;
inline bool MSG_DS_MAIN_STORE_START_STORE::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_MAIN_STORE_START_STORE::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_MAIN_STORE_START_STORE::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_MAIN_STORE_START_STORE::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_START_STORE::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_START_STORE.task_id)
  return task_id_;
}
inline void MSG_DS_MAIN_STORE_START_STORE::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_START_STORE.task_id)
}

// required int32 session_id = 2;
inline bool MSG_DS_MAIN_STORE_START_STORE::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_MAIN_STORE_START_STORE::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_MAIN_STORE_START_STORE::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_MAIN_STORE_START_STORE::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_START_STORE::session_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_START_STORE.session_id)
  return session_id_;
}
inline void MSG_DS_MAIN_STORE_START_STORE::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_START_STORE.session_id)
}

// optional .DS.CLIENTINFO client_info = 3;
inline bool MSG_DS_MAIN_STORE_START_STORE::has_client_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_MAIN_STORE_START_STORE::set_has_client_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_MAIN_STORE_START_STORE::clear_has_client_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_MAIN_STORE_START_STORE::clear_client_info() {
  if (client_info_ != NULL) client_info_->::DS::CLIENTINFO::Clear();
  clear_has_client_info();
}
inline const ::DS::CLIENTINFO& MSG_DS_MAIN_STORE_START_STORE::client_info() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_START_STORE.client_info)
  return client_info_ != NULL ? *client_info_ : *default_instance_->client_info_;
}
inline ::DS::CLIENTINFO* MSG_DS_MAIN_STORE_START_STORE::mutable_client_info() {
  set_has_client_info();
  if (client_info_ == NULL) client_info_ = new ::DS::CLIENTINFO;
  // @@protoc_insertion_point(field_mutable:DS.MSG_DS_MAIN_STORE_START_STORE.client_info)
  return client_info_;
}
inline ::DS::CLIENTINFO* MSG_DS_MAIN_STORE_START_STORE::release_client_info() {
  clear_has_client_info();
  ::DS::CLIENTINFO* temp = client_info_;
  client_info_ = NULL;
  return temp;
}
inline void MSG_DS_MAIN_STORE_START_STORE::set_allocated_client_info(::DS::CLIENTINFO* client_info) {
  delete client_info_;
  client_info_ = client_info;
  if (client_info) {
    set_has_client_info();
  } else {
    clear_has_client_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DS.MSG_DS_MAIN_STORE_START_STORE.client_info)
}

// -------------------------------------------------------------------

// MSG_DS_STORE_MAIN_FINISH_BLK

// required int32 task_id = 1;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_STORE_MAIN_FINISH_BLK::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK.task_id)
  return task_id_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK.task_id)
}

// required int64 blkid = 2;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK::has_blkid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_has_blkid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_has_blkid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_blkid() {
  blkid_ = GOOGLE_LONGLONG(0);
  clear_has_blkid();
}
inline ::google::protobuf::int64 MSG_DS_STORE_MAIN_FINISH_BLK::blkid() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK.blkid)
  return blkid_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_blkid(::google::protobuf::int64 value) {
  set_has_blkid();
  blkid_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK.blkid)
}

// required string start_time = 3;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_start_time() {
  if (start_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    start_time_->clear();
  }
  clear_has_start_time();
}
inline const ::std::string& MSG_DS_STORE_MAIN_FINISH_BLK::start_time() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK.start_time)
  return *start_time_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_start_time(const ::std::string& value) {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK.start_time)
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_start_time(const char* value) {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:DS.MSG_DS_STORE_MAIN_FINISH_BLK.start_time)
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DS.MSG_DS_STORE_MAIN_FINISH_BLK.start_time)
}
inline ::std::string* MSG_DS_STORE_MAIN_FINISH_BLK::mutable_start_time() {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    start_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DS.MSG_DS_STORE_MAIN_FINISH_BLK.start_time)
  return start_time_;
}
inline ::std::string* MSG_DS_STORE_MAIN_FINISH_BLK::release_start_time() {
  clear_has_start_time();
  if (start_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = start_time_;
    start_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_allocated_start_time(::std::string* start_time) {
  if (start_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete start_time_;
  }
  if (start_time) {
    set_has_start_time();
    start_time_ = start_time;
  } else {
    clear_has_start_time();
    start_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DS.MSG_DS_STORE_MAIN_FINISH_BLK.start_time)
}

// required string end_time = 4;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::clear_end_time() {
  if (end_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    end_time_->clear();
  }
  clear_has_end_time();
}
inline const ::std::string& MSG_DS_STORE_MAIN_FINISH_BLK::end_time() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK.end_time)
  return *end_time_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_end_time(const ::std::string& value) {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK.end_time)
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_end_time(const char* value) {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:DS.MSG_DS_STORE_MAIN_FINISH_BLK.end_time)
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_end_time(const char* value, size_t size) {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DS.MSG_DS_STORE_MAIN_FINISH_BLK.end_time)
}
inline ::std::string* MSG_DS_STORE_MAIN_FINISH_BLK::mutable_end_time() {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    end_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DS.MSG_DS_STORE_MAIN_FINISH_BLK.end_time)
  return end_time_;
}
inline ::std::string* MSG_DS_STORE_MAIN_FINISH_BLK::release_end_time() {
  clear_has_end_time();
  if (end_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = end_time_;
    end_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK::set_allocated_end_time(::std::string* end_time) {
  if (end_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete end_time_;
  }
  if (end_time) {
    set_has_end_time();
    end_time_ = end_time;
  } else {
    clear_has_end_time();
    end_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DS.MSG_DS_STORE_MAIN_FINISH_BLK.end_time)
}

// -------------------------------------------------------------------

// MSG_DS_STORE_MAIN_FINISH_BLK_ACK

// required int32 task_id = 1;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK_ACK::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_STORE_MAIN_FINISH_BLK_ACK::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK.task_id)
  return task_id_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK.task_id)
}

// required int32 session_id = 2;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK_ACK::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 MSG_DS_STORE_MAIN_FINISH_BLK_ACK::session_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK.session_id)
  return session_id_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK.session_id)
}

// required int32 result = 3;
inline bool MSG_DS_STORE_MAIN_FINISH_BLK_ACK::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MSG_DS_STORE_MAIN_FINISH_BLK_ACK::result() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK.result)
  return result_;
}
inline void MSG_DS_STORE_MAIN_FINISH_BLK_ACK::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_STORE_MAIN_FINISH_BLK_ACK.result)
}

// -------------------------------------------------------------------

// MSG_DS_MAIN_STORE_FINISH_STORE

// required int32 task_id = 1;
inline bool MSG_DS_MAIN_STORE_FINISH_STORE::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_FINISH_STORE::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_FINISH_STORE.task_id)
  return task_id_;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_FINISH_STORE.task_id)
}

// required int32 session_id = 2;
inline bool MSG_DS_MAIN_STORE_FINISH_STORE::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_FINISH_STORE::session_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_FINISH_STORE.session_id)
  return session_id_;
}
inline void MSG_DS_MAIN_STORE_FINISH_STORE::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_FINISH_STORE.session_id)
}

// -------------------------------------------------------------------

// MSG_DS_MAIN_STORE_RETRY_STORE

// required int32 task_id = 1;
inline bool MSG_DS_MAIN_STORE_RETRY_STORE::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_RETRY_STORE::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_RETRY_STORE.task_id)
  return task_id_;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_RETRY_STORE.task_id)
}

// required int32 session_id = 2;
inline bool MSG_DS_MAIN_STORE_RETRY_STORE::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_RETRY_STORE::session_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_RETRY_STORE.session_id)
  return session_id_;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_RETRY_STORE.session_id)
}

// -------------------------------------------------------------------

// MSG_DS_MAIN_STORE_RETRY_STORE_ACK

// required int32 task_id = 1;
inline bool MSG_DS_MAIN_STORE_RETRY_STORE_ACK::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_RETRY_STORE_ACK::task_id() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_RETRY_STORE_ACK.task_id)
  return task_id_;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_RETRY_STORE_ACK.task_id)
}

// required int32 result = 2;
inline bool MSG_DS_MAIN_STORE_RETRY_STORE_ACK::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MSG_DS_MAIN_STORE_RETRY_STORE_ACK::result() const {
  // @@protoc_insertion_point(field_get:DS.MSG_DS_MAIN_STORE_RETRY_STORE_ACK.result)
  return result_;
}
inline void MSG_DS_MAIN_STORE_RETRY_STORE_ACK::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS.MSG_DS_MAIN_STORE_RETRY_STORE_ACK.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace DS

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DS_5fSTORE_5fPROTOCOL_2eproto__INCLUDED
